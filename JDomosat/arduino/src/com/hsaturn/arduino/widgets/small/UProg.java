/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hsaturn.arduino.widgets.small;

import com.hsaturn.arduino.hardware.Module;
import com.hsaturn.arduino.message.Message;
import com.hsaturn.arduino.widgets.Widget;

/**
 *
 * @author hsaturn
 */
public class UProg extends Widget {

	public UProg(Module m) {
		super(m);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPc = new javax.swing.JLabel();
        lblFreeMem = new javax.swing.JLabel();
        txtFreeMem = new javax.swing.JTextField();
        txtPc = new javax.swing.JTextField();

        lblPc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        lblPc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(lblPc, org.openide.util.NbBundle.getMessage(UProg.class, "UProg.lblPc.text")); // NOI18N

        lblFreeMem.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        lblFreeMem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(lblFreeMem, org.openide.util.NbBundle.getMessage(UProg.class, "UProg.lblFreeMem.text")); // NOI18N

        txtFreeMem.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtFreeMem.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFreeMem.setText(org.openide.util.NbBundle.getMessage(UProg.class, "UProg.txtFreeMem.text")); // NOI18N

        txtPc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtPc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPc.setText(org.openide.util.NbBundle.getMessage(UProg.class, "UProg.txtPc.text")); // NOI18N
        txtPc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFreeMem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFreeMem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPc)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPc)
                    .addComponent(txtPc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFreeMem)
                    .addComponent(txtFreeMem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPcActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_txtPcActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblFreeMem;
    private javax.swing.JLabel lblPc;
    private javax.swing.JTextField txtFreeMem;
    private javax.swing.JTextField txtPc;
    // End of variables declaration//GEN-END:variables

	@Override
	protected void onMessage(Message msg) {
		switch (msg.name) {
			case "uprog_state":
				if (msg.get("pc") != null) {
					txtPc.setText(msg.get("pc").toString());
				}
				if (msg.get("freemem") != null) {
					txtFreeMem.setText(msg.get("freemem").toString());
				}
				break;
		}
	}
}
