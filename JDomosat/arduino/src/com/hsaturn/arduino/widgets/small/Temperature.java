/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hsaturn.arduino.widgets.small;

import com.hsaturn.arduino.hardware.Module;
import com.hsaturn.arduino.message.Message;
import com.hsaturn.arduino.message.Value;
import com.hsaturn.arduino.widgets.Widget;
import com.hsaturn.utils.Observable;
import com.hsaturn.utils.Observer;

/**
 *
 * @author hsaturn
 */
public class Temperature extends Widget {

	/**
	 * Creates new form ModuleTemperatureMini
	 */
	public Temperature(Module m) {
		super(m);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sliderTemp = new javax.swing.JProgressBar();
        lblTemp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sliderHumidity = new javax.swing.JProgressBar();
        lblHumidity = new javax.swing.JLabel();

        sliderTemp.setForeground(new java.awt.Color(51, 204, 0));
        sliderTemp.setMaximum(450);
        sliderTemp.setValue(190);

        org.openide.awt.Mnemonics.setLocalizedText(lblTemp, org.openide.util.NbBundle.getMessage(Temperature.class, "Temperature.lblTemp.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(Temperature.class, "Temperature.jLabel1.text_1")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(Temperature.class, "Temperature.jLabel2.text_1")); // NOI18N

        sliderHumidity.setForeground(new java.awt.Color(0, 204, 204));
        sliderHumidity.setMaximum(1000);
        sliderHumidity.setValue(400);

        org.openide.awt.Mnemonics.setLocalizedText(lblHumidity, org.openide.util.NbBundle.getMessage(Temperature.class, "Temperature.lblHumidity.text_1")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTemp))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderHumidity, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHumidity))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTemp, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sliderTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHumidity)
                    .addComponent(jLabel2)
                    .addComponent(sliderHumidity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblHumidity;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JProgressBar sliderHumidity;
    private javax.swing.JProgressBar sliderTemp;
    // End of variables declaration//GEN-END:variables

	@Override
	protected void onMessage(Message msg) {
		Value temp = msg.get("temperature");
		if (temp != null) {
			String t = temp.toString();
			lblTemp.setText(t + "Â°");
			sliderTemp.setValue(temp.toInt());
		}

		Value h = msg.get("humidity");
		if (h != null) {
			String t = h.toString();
			lblHumidity.setText(t + "%");
			sliderHumidity.setValue(h.toInt());
		}
	}
}
