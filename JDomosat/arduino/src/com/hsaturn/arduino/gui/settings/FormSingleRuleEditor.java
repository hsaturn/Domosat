/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hsaturn.arduino.gui.settings;

import com.hsaturn.arduino.document.ProjectList;
import com.hsaturn.arduino.document.Rule;
import com.hsaturn.arduino.gui.CustomView;
import com.hsaturn.arduino.hardware.Arduino;
import com.hsaturn.arduino.hardware.EepromPart;
import com.hsaturn.arduino.hardware.ModuleProg;
import com.hsaturn.utils.Observable;
import com.hsaturn.utils.Observer;
import javax.swing.JFrame;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author hsaturn
 */
public class FormSingleRuleEditor extends javax.swing.JPanel implements Observer {

	private Rule rule;	// Rule currently edited
	private boolean bCanInit = true;
	private Rule ruleOrg;
	private final CustomView container;

	@Override
	public void update(Observable o, Object arg) {
		if (o == rule) {
			initValues();
		}
	}

	private void initValues() {
		if (bCanInit) {
			txtRuleName.setText(rule.rulename());
			txtRuleDescription.setText(rule.description());
			txtRule.setText(rule.rule());
		}
		updateUi();
	}

	private void updateUi() {
		String s;
		boolean bModified = !(rule.equals(ruleOrg));
		if (bModified) {
			s = "*";
		} else {
			s = "";
		}
		if (rule.postfix() != null) {
			txtPostfix.setText(rule.postfix());
		} else {
			txtPostfix.setText("<no postfix yet>");
		}
		txtRuleHexa.setText(rule.hexa());
		lblSizeValue.setText(Integer.toString(rule.size()));
		container.setDisplayName(s + "Rule:" + rule.rulename());
		btnAccept.setEnabled(bModified);
		btnSend.setEnabled(rule.hexa() != null);
	}

	interface UpdateStrategy {

		void setValue();
	}

	class RuleDocumentListener implements DocumentListener, Observer {

		UpdateStrategy strategy;

		public RuleDocumentListener(UpdateStrategy st) {
			strategy = st;
		}

		@Override
		public void insertUpdate(DocumentEvent e) {
			ruleHasChanged();
		}

		@Override
		public void removeUpdate(DocumentEvent e) {
			ruleHasChanged();
		}

		@Override
		public void changedUpdate(DocumentEvent e) {
			ruleHasChanged();
		}

		private void ruleHasChanged() {
			bCanInit = false;
			strategy.setValue();
			bCanInit = true;
		}

		@Override
		public void update(Observable o, Object arg) {
			throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
		}

	}

	/**
	 * Creates new form FormRuleEditor
	 *
	 * @param theRule Rule edited
	 */
	public FormSingleRuleEditor(CustomView v, Rule theRule) {
		container = v;
		rule = theRule;
		ruleOrg = new Rule(theRule);
		rule.addObserver(this);
		initComponents();
		initValues();
		txtRule.getDocument().addDocumentListener(new RuleDocumentListener(new UpdateStrategy() {

			@Override
			public void setValue() {
				rule.setRule(txtRule.getText());
			}
		}));

		txtRuleName.getDocument().addDocumentListener(new RuleDocumentListener(new UpdateStrategy() {

			@Override
			public void setValue() {
				rule.setRuleName(txtRuleName.getText());
			}
		}));

		txtRuleDescription.getDocument().addDocumentListener(new RuleDocumentListener(new UpdateStrategy() {

			@Override
			public void setValue() {
				rule.setDescription(txtRuleDescription.getText());
			}
		})
		);

		txtRuleNumber.getDocument().addDocumentListener(new RuleDocumentListener(new UpdateStrategy() {

			@Override
			public void setValue() {
				try {
					rule.setNumber(Integer.parseInt(txtRuleNumber.getText()));
				} catch (NumberFormatException ex) {
					System.err.println("NumberFormatException");
				}
			}
		}));

		txtRuleHexa.setEditable(false);
		txtPostfix.setEditable(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRuleName = new javax.swing.JTextField();
        lblRulename = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRule = new javax.swing.JTextArea();
        lblRule = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        txtRuleDescription = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        lblSizeValue = new javax.swing.JLabel();
        lblHexa1 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblRow = new javax.swing.JLabel();
        txtRuleNumber = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRuleHexa = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPostfix = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        txtRuleName.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtRuleName.setText(org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.txtRuleName.text")); // NOI18N
        txtRuleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRuleNameActionPerformed(evt);
            }
        });

        lblRulename.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblRulename, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblRulename.text")); // NOI18N

        txtRule.setColumns(20);
        txtRule.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtRule.setRows(4);
        jScrollPane1.setViewportView(txtRule);

        lblRule.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblRule, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblRule.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnCancel, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnAccept, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.btnAccept.text")); // NOI18N
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        txtRuleDescription.setText(org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.txtRuleDescription.text")); // NOI18N

        lblDescription.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblDescription, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblDescription.text")); // NOI18N

        lblSize.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblSize, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblSize.text")); // NOI18N

        lblSizeValue.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblSizeValue, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblSizeValue.text")); // NOI18N

        lblHexa1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblHexa1, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblHexa1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnSend, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.btnSend.text")); // NOI18N
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.jLabel1.text")); // NOI18N

        lblRow.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(lblRow, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.lblRow.text")); // NOI18N

        txtRuleNumber.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtRuleNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRuleNumber.setText(org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.txtRuleNumber.text")); // NOI18N
        txtRuleNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRuleNumberActionPerformed(evt);
            }
        });

        txtRuleHexa.setColumns(20);
        txtRuleHexa.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtRuleHexa.setRows(3);
        jScrollPane2.setViewportView(txtRuleHexa);

        txtPostfix.setColumns(20);
        txtPostfix.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        txtPostfix.setRows(3);
        jScrollPane3.setViewportView(txtPostfix);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(FormSingleRuleEditor.class, "FormSingleRuleEditor.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRulename)
                    .addComponent(lblRule)
                    .addComponent(lblHexa1)
                    .addComponent(lblSize)
                    .addComponent(lblDescription)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAccept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addGap(3, 3, 3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addComponent(txtRuleDescription)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(lblSizeValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtRuleName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRuleNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRulename)
                    .addComponent(txtRuleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRow)
                    .addComponent(txtRuleNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRule)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHexa1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescription)
                    .addComponent(txtRuleDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSizeValue)
                    .addComponent(lblSize)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnCancel)
                    .addComponent(btnSend))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
		rule.copyFrom(ruleOrg);        // TODO add your handling code here:
		container.close();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
		container.close();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
		if (rule.hexa() != null) {
			// @FIXME ST_PROG_UP0 est le début du programme
			int iOffset = 100 + ModuleProg.BYTES_PER_ROW * Integer.parseInt(txtRuleNumber.getText());
			// @FIXME contextual please
			Arduino arduino = ProjectList.getInstance().getCurrentProject().getArduino();
			EepromPart.write(arduino, iOffset, rule.hexa());
		}
    }//GEN-LAST:event_btnSendActionPerformed

    private void txtRuleNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRuleNumberActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_txtRuleNumberActionPerformed

    private void txtRuleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRuleNameActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_txtRuleNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblHexa1;
    private javax.swing.JLabel lblRow;
    private javax.swing.JLabel lblRule;
    private javax.swing.JLabel lblRulename;
    private javax.swing.JLabel lblSize;
    private javax.swing.JLabel lblSizeValue;
    private javax.swing.JTextArea txtPostfix;
    private javax.swing.JTextArea txtRule;
    private javax.swing.JTextField txtRuleDescription;
    private javax.swing.JTextArea txtRuleHexa;
    private javax.swing.JTextField txtRuleName;
    private javax.swing.JTextField txtRuleNumber;
    // End of variables declaration//GEN-END:variables
}
