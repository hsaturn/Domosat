#if HAVE_DISPLAY
#include "CommIcon.h"
#include <Arid.h>
#include <Timer.h>
#include <MemoryFree.h>
#include "thermo.cpp"	// FIXME NULLL

extern Arid tft;
extern uint8_t const thermo[];

int led = 4;	// FIXME

static const uint8_t out[] PROGMEM={
		0xad,0xa1,0x6,0x7,0x01,0x0,0x0,0x0,0x6d,0x0,0x0,0x11,0x0,0x1,0x11,0x10,0x11,0x11,0x11,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,
		0xad,0xa1,0x6,0x7,0x01,0x0,0x0,0x0,0x3,0x0,0x0,0x11,0x0,0x1,0x11,0x10,0x11,0x11,0x11,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0};

static const uint8_t in[] PROGMEM={
		0xad,0xa1,0x6,0x7,0x4,0x4,0x0,0x0,0x6d,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x11,0x11,0x11,0x1,0x11,0x10,0x0,0x11,0x0,
		0xad,0xa1,0x6,0x7,0x4,0x4,0x0,0x0,0x1c,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x0,0x11,0x0,0x11,0x11,0x11,0x1,0x11,0x10,0x0,0x11,0x0};

static const uint8_t conn[] PROGMEM={
		0xad,0xa1,0xa,0x8,0x09,0x1,0x0,0x0,0x24,0x49,0x0,0x1,0x22,0x22,0x22,0x10,0x12,0x0,0x0,0x0,0x21,0x0,0x12,0x22,0x21,0x0,0x1,0x20,0x0,0x2,0x10,0x0,0x0,0x22,0x0,0x0,0x0,0x1,0x0,0x10,0x0,0x0,0x0,0x22,0x0,0x0,0x0,0x0,0x22,0x0,0x0,
		0xad,0xa1,0xa,0x8,0x09,0x1,0x0,0x0,0x48,0xfc,0x0,0x1,0x22,0x22,0x22,0x10,0x12,0x0,0x0,0x0,0x21,0x0,0x12,0x22,0x21,0x0,0x1,0x20,0x0,0x2,0x10,0x0,0x0,0x22,0x0,0x0,0x0,0x1,0x0,0x10,0x0,0x0,0x0,0x22,0x0,0x0,0x0,0x0,0x22,0x0,0x0};


void CommIcon::update()
{
	if ((cState & COMM_IN)  && ptmrOffIn ->nextEvent())
	{
		digitalWrite(led, LOW);	// FIXME
		setIn (0);
	}
	if ((cState & COMM_OUT) && ptmrOffOut->nextEvent())
	{
		setOut(0);
	}
}

	CommIcon::CommIcon(uint8_t x,uint8_t y)
: cState(0), mx(x), my(y)
{
	ptmrOffIn=new Timer(250);
	ptmrOffOut=new Timer(250);
	draw(true);
}

void CommIcon::setFlags(uint8_t flags)
{
	if (cState!=flags)
	{
		cState=flags;
		draw();
	}
}


void CommIcon::setOffInterval(long lMs)
{
	ptmrOffIn ->setInterval(lMs);
	ptmrOffOut->setInterval(lMs);
}


void CommIcon::draw(bool bFull)
{
	if (bFull)
	{
		tft.drawArid(thermo,mx,my,0);
	}
	cState=~cState;
	setConnected(~cState & COMM_CONN);
	setIn(~cState & COMM_IN);
	setOut(~cState & COMM_OUT);

}

void CommIcon::draw(const uint8_t* icon, uint8_t icon_bytes, uint8_t BIT, uint8_t iFlag)
{
	uint8_t oldState=cState;
	if (iFlag)
	{
		cState |= BIT;
	}
	else
	{
		cState &= ~BIT;
	}
	if (oldState != cState)
	{
		if (iFlag)
		{
			icon+=icon_bytes;
		}
		tft.drawArid(icon, mx,my,0);
	}
}

void CommIcon::setOut(uint8_t iOut)
{
	ptmrOffOut->reset();

	draw(out,31,COMM_OUT,iOut);
}

void CommIcon::setIn(bool iIn)
{
	pinMode(led, OUTPUT);	// FIXME pinMode is not allowed (resource may be used)
	if (iIn) digitalWrite(led, HIGH);
	ptmrOffIn->reset();
	draw(in,31,COMM_IN,iIn);
}


void CommIcon::setConnected(uint8_t iConnected)
{
	draw(conn, 51,COMM_CONN,iConnected);
}

#endif